{"version":3,"sources":["webpack://porf-lab/./src/components/get-graphics-cord.js","webpack://porf-lab/./src/index.js","webpack://porf-lab/./src/components/check-input-data.js","webpack://porf-lab/./src/components/get-intput-data.js","webpack://porf-lab/./src/components/print-graphics.js","webpack://porf-lab/./src/components/local-storage.js"],"names":["myFunction","alpha","betta","gamma","delta","xi","x","Math","sin","cos","createFiniteDifferenceTable","interStep","nod","a","arr","i","j","arguments","isNaN","console","log","pol","t","k","n","matr","fac","document","addEventListener","optSize","querySelectorAll","functions","del","querySelector","nodes","button","offset","start","flag","forEach","item","value","match","isChecked","dataSet","b","c","d","delta1","target","getAttribute","parseInt","pointSet","fun","checked","push","points","stepX","y","getFunctionPoints","getPolPoints","getRnPoints","containerSelector","pointsData","container","Flotr","draw","yaxis","max","min","xaxis","grid","minorVerticalLines","localStorage","getItem","setItem","setBorderColor","style","borderColor","e","setListenersForCheckingData","event","code"],"mappings":"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","file":"main.js","sourcesContent":["function myFunction({ alpha, betta, gamma, delta, xi, x }) {\r\n    return (\r\n        alpha * Math.sin(betta / (x - gamma) ** 2) + delta * Math.cos(xi * x)\r\n    );\r\n}\r\n// (alpha) * Math.sin(Math.tan((betta) * x)) +\r\n// (gamma) * Math.cos((delta) * x)\r\n\r\nfunction getFunctionPoints({ a, b, alpha, betta, gamma, delta, xi }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        points.push([x, y]);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction getPolPoints(\r\n    { a, b, d, nod, alpha, betta, gamma, delta, xi },\r\n    offset\r\n) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (var x = a; x <= b; x += stepX) {\r\n        points.push([x, pol((x - a) / interStep, 0, nod, matr)]);\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\nfunction getRnPoints({ a, b, alpha, betta, gamma, delta, xi, nod }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        points.push([x, y + pol((x - a) / interStep, 0, nod, matr)]);\r\n    }\r\n    return points;\r\n}\r\nfunction createFiniteDifferenceTable({\r\n    interStep,\r\n    nod,\r\n    a,\r\n    alpha,\r\n    gamma,\r\n    betta,\r\n    delta,\r\n    xi,\r\n}) {\r\n    let arr = [];\r\n    for (let i = 0; i < nod + 1; i++) {\r\n        arr[i] = [];\r\n        for (let j = 0; j < nod + 1; j++) {\r\n            arr[i][j] = 0;\r\n        }\r\n    }\r\n\r\n    for (var x = a, i = 0; i <= nod; x += interStep, i++) {\r\n        arr[i][0] = myFunction({ ...arguments[0], x });\r\n    }\r\n\r\n    for (var j = 1; j <= nod; j++) {\r\n        for (var i = 0; i <= nod - j; i++) {\r\n            arr[i][j] = arr[i + 1][j - 1] - arr[i][j - 1];\r\n            if (isNaN(arr[i][j])) {\r\n                console.log('NAN');\r\n            }\r\n        }\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction pol(t, k, n, matr) {\r\n    if (k < n) return pol(t, k + 1, n, matr) + fac(t, k) * matr[0][k];\r\n    return fac(t, k) * matr[0][k];\r\n}\r\n\r\nfunction fac(t, k) {\r\n    if (k == 0) return 1;\r\n    return (t / k) * fac(t - 1, k - 1);\r\n}\r\n\r\nexport { getFunctionPoints, getPolPoints, getRnPoints };\r\n","import getInputData from \"./components/get-intput-data\";\r\nimport basic from \"./components/print-graphics\";\r\n\r\nimport {\r\n    postDataToLocalStorage,\r\n    getDataFromLocalStorage,\r\n} from \"./components/local-storage\";\r\n\r\nimport {\r\n    getFunctionPoints,\r\n    getPolPoints,\r\n    getRnPoints,\r\n} from \"./components/get-graphics-cord\";\r\n\r\nimport {\r\n    isChecked,\r\n    setListenersForCheckingData,\r\n} from \"./components/check-input-data\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const optSize = document.querySelectorAll(\".opt input[data-type-1]\"),\r\n        functions = document.querySelectorAll(\".opt input[type='checkbox']\"),\r\n        del = document.querySelector(\"#del\"),\r\n        nodes = document.querySelector(\"#nodes\"),\r\n        button = document.querySelector(\"#button\");\r\n\r\n    const offset = 10000;\r\n\r\n    getDataFromLocalStorage([...functions, nodes, del, ...optSize]);\r\n    postDataToLocalStorage([...functions, nodes, del, ...optSize]);\r\n    start();\r\n\r\n    setListenersForCheckingData({ optSize, nodes });\r\n\r\n    function start() {\r\n        if (!isChecked({ optSize, nodes })) {\r\n            console.log(\"Данные введены некорректно!\");\r\n            return;\r\n        }\r\n\r\n        const dataSet = getInputData({ optSize, nodes, del });\r\n\r\n        const pointSet = [];\r\n\r\n        functions.forEach((fun) => {\r\n            if (fun.checked) {\r\n                switch (fun.getAttribute(\"id\")) {\r\n                    case \"f\":\r\n                        pointSet.push(getFunctionPoints(dataSet, offset));\r\n                        break;\r\n                    case \"p\":\r\n                        pointSet.push(getPolPoints(dataSet, offset));\r\n                        break;\r\n                    case \"r\":\r\n                        pointSet.push(getRnPoints(dataSet, offset));\r\n                        break;\r\n                    case \"df\":\r\n                        break;\r\n                    case \"dp\":\r\n                        break;\r\n                }\r\n            } else {\r\n                pointSet.push([]);\r\n            }\r\n        });\r\n        basic(\"#container\", pointSet, dataSet);\r\n    }\r\n\r\n    button.addEventListener(\"click\", start);\r\n    document.addEventListener(\"keydown\", (event) => {\r\n        if (event.code === \"Enter\") start();\r\n    });\r\n    functions.forEach((item) => {\r\n        item.addEventListener(\"change\", () => start());\r\n    });\r\n});\r\n","function setListenersForCheckingData({ optSize, nodes }) {\r\n    function setBorderColor(target) {\r\n        if (target.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) {\r\n            target.style.borderColor = \"\";\r\n            return true;\r\n        } else {\r\n            target.style.borderColor = \"red\";\r\n            return false;\r\n        }\r\n    }\r\n\r\n    optSize.forEach((item) => {\r\n        item.addEventListener(\"input\", (e) => {\r\n            let value = e.target.value;\r\n            if (setBorderColor(e.target)) {\r\n                e.target.value =\r\n                    value > 100 ? 100 : value < -100 ? -100 : value;\r\n            }\r\n        });\r\n    });\r\n\r\n    nodes.addEventListener(\"input\", () => {\r\n        let value = nodes.value;\r\n        if (setBorderColor(nodes)) {\r\n            nodes.value = value < 0 ? 0 : value > 200 ? 200 : value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction isChecked({ optSize, nodes }) {\r\n    let flag = true;\r\n    optSize.forEach((item) => {\r\n        if (!item.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) flag = false;\r\n    });\r\n\r\n    if (!nodes.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) flag = false;\r\n    return flag;\r\n}\r\n\r\n// export default inputData;\r\nexport {isChecked, setListenersForCheckingData};","function getInputData({ optSize, nodes, del }) {\r\n    let a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi;\r\n\r\n    nod = nodes.value;\r\n    delta1 = del.value;\r\n\r\n    optSize.forEach((target) => {\r\n        switch (target.getAttribute(\"id\")) {\r\n            case \"A\":\r\n                a = target.value;\r\n                break;\r\n            case \"B\":\r\n                b = target.value;\r\n                break;\r\n            case \"C\":\r\n                c = target.value;\r\n                break;\r\n            case \"D\":\r\n                d = target.value;\r\n                break;\r\n            case \"nodes\":\r\n                nod = target.value;\r\n                break;\r\n            case \"alpha\":\r\n                alpha = target.value;\r\n                break;\r\n            case \"betta\":\r\n                betta = target.value;\r\n                break;\r\n            case \"gamma\":\r\n                gamma = target.value;\r\n                break;\r\n            case \"delta\":\r\n                delta = target.value;\r\n                break;\r\n            case \"xi\":\r\n                xi = target.value;\r\n                break;\r\n        }\r\n    });\r\n\r\n    a = parseInt(a);\r\n    b = parseInt(b);\r\n    c = parseInt(c);\r\n    d = parseInt(d);\r\n    nod = parseInt(nod);\r\n    alpha = parseInt(alpha);\r\n    betta = parseInt(betta);\r\n    gamma = parseInt(gamma);\r\n    delta = parseInt(delta);\r\n    delta1 = parseInt(delta1);\r\n    xi = parseInt(xi);\r\n\r\n    return { a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi };\r\n}\r\n\r\nexport default getInputData;\r\n","function basic(containerSelector, pointsData, dataSet) {\r\n    const container = document.querySelector(containerSelector);\r\n\r\n    const graph = Flotr.draw(container, pointsData, {\r\n        yaxis: {\r\n            max: dataSet.d,\r\n            min: dataSet.c,\r\n        },\r\n        xaxis: {\r\n            max: dataSet.b,\r\n            min: dataSet.a,\r\n        },\r\n        grid: {\r\n            minorVerticalLines: true,\r\n        },\r\n    });\r\n}\r\n\r\nexport default basic;\r\n","function getDataFromLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        let value = localStorage.getItem(item.getAttribute(\"id\"));\r\n        if (value) {\r\n            if (item.getAttribute(\"type\") === \"checkbox\") {\r\n                item.checked = value == \"true\";\r\n            } else if (item.getAttribute(\"type\") === \"text\") {\r\n                item.value = value;\r\n            } else if (item.getAttribute(\"id\") === \"del\") {\r\n                item.value = value;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction postDataToLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        if (item.getAttribute(\"type\") === \"checkbox\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.checked);\r\n            });\r\n        } else if (item.getAttribute(\"type\") === \"text\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.value);\r\n            });\r\n        } else if (item.getAttribute(\"id\") === \"del\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(\"del\", item.value);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport { getDataFromLocalStorage, postDataToLocalStorage };\r\n"],"sourceRoot":""}