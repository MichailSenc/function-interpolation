{"version":3,"sources":["webpack://porf-lab/./src/components/get-intput-data.js","webpack://porf-lab/./src/components/get-graphics-cord.js","webpack://porf-lab/./src/index.js","webpack://porf-lab/./src/components/check-input-data.js","webpack://porf-lab/./src/components/print-graphics.js","webpack://porf-lab/./src/components/local-storage.js"],"names":["items","a","b","c","d","nod","alpha","betta","gamma","delta","delta1","xi","forEach","target","getAttribute","value","nodes","del","parseInt","parseFloat","myFunction","x","Math","sin","cos","createFiniteDifferenceTable","interStep","arr","i","j","arguments","isNaN","console","log","calcPolynom","t","k","n","matr","coefAtDelta","document","addEventListener","optSize","querySelectorAll","functions","querySelector","button","offset","start","inputs","flag","item","match","isChecked","dataSet","pointSet","fun","checked","push","points","stepX","y","df","dp","containerSelector","pointsData","container","Flotr","draw","yaxis","max","min","xaxis","grid","minorVerticalLines","localStorage","getItem","setItem","setBorderColor","style","borderColor","e","setListenersForCheckingData","event","code"],"mappings":"mBA2DA,QA3DA,SAAsBA,GAClB,IAAIC,EAAGC,EAAGC,EAAGC,EAAGC,EAAKC,EAAOC,EAAOC,EAAOC,EAAOC,EAAQC,EAuDzD,OArDAX,EAAMY,SAASC,IACX,OAAQA,EAAOC,aAAa,OACxB,IAAK,IACDb,EAAIY,EAAOE,MACX,MACJ,IAAK,IACDb,EAAIW,EAAOE,MACX,MACJ,IAAK,IACDZ,EAAIU,EAAOE,MACX,MACJ,IAAK,IACDX,EAAIS,EAAOE,MACX,MACJ,IAAK,QACDV,EAAMQ,EAAOE,MACb,MACJ,IAAK,QACDT,EAAQO,EAAOE,MACf,MACJ,IAAK,QACDR,EAAQM,EAAOE,MACf,MACJ,IAAK,QACDP,EAAQK,EAAOE,MACf,MACJ,IAAK,QACDN,EAAQI,EAAOE,MACf,MACJ,IAAK,KACDJ,EAAKE,EAAOE,MACZ,MACJ,IAAK,QACDV,EAAMW,MAAMD,MACZ,MACJ,IAAK,MACDL,EAASO,IAAIF,UAKzBd,EAAIiB,SAASjB,GACbC,EAAIgB,SAAShB,GACbC,EAAIe,SAASf,GACbC,EAAIc,SAASd,GACbE,EAAQY,SAASZ,GACjBC,EAAQW,SAASX,GACjBC,EAAQU,SAASV,GACjBC,EAAQS,SAAST,GACjBC,EAASS,WAAWT,GACpBL,EAAMa,SAASb,GACfM,EAAKO,SAASP,GAEP,CAAEV,IAAGC,IAAGC,IAAGC,IAAGC,MAAKC,QAAOC,QAAOC,QAAOC,QAAOC,SAAQC,OCxDlE,SAASS,GAAW,MAAEd,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,GAAEE,EAAE,EAAEU,IAClD,OAAOf,EAAQgB,KAAKC,IAAIhB,GAASc,EAAIb,IAAU,GAAKC,EAAQa,KAAKE,IAAIb,EAAKU,GAuE9E,SAASI,GAA4B,UAAEC,EAAS,IAAErB,EAAG,EAAEJ,EAAC,MAAEK,EAAK,MAAEE,EAAK,MAAED,EAAK,MAAEE,EAAK,GAAEE,IAClF,IAAIgB,EAAM,GACV,IAAK,IAAIC,EAAI,EAAGA,EAAIvB,EAAM,EAAGuB,IAAK,CAC9BD,EAAIC,GAAK,GACT,IAAK,IAAIC,EAAI,EAAGA,EAAIxB,EAAM,EAAGwB,IACzBF,EAAIC,GAAGC,GAAK,EAIpB,IAAK,IAAIR,EAAIpB,EAAG2B,EAAI,EAAGA,GAAKvB,EAAKgB,GAAKK,EAAWE,IAC7CD,EAAIC,GAAG,GAAKR,EAAW,IAAKU,UAAU,GAAIT,MACtCU,MAAMJ,EAAIC,GAAG,MAEbD,EAAIC,GAAG,GAAKR,EAAW,IAAKU,UAAU,GAAIT,EAAGA,EAAIK,EAAY,IAC7DM,QAAQC,IAAI,QAIpB,IAAK,IAAIJ,EAAI,EAAGA,GAAKxB,EAAKwB,IACtB,IAAK,IAAID,EAAI,EAAGA,GAAKvB,EAAMwB,EAAGD,IAC1BD,EAAIC,GAAGC,GAAKF,EAAIC,EAAI,GAAGC,EAAI,GAAKF,EAAIC,GAAGC,EAAI,GAInD,OAAOF,EAGX,SAASO,EAAYC,EAAGC,EAAGC,EAAGC,GAC1B,OAAIF,EAAIC,EAAUH,EAAYC,EAAGC,EAAI,EAAGC,EAAGC,GAAQC,EAAYJ,EAAGC,GAAKE,EAAK,GAAGF,GACxEG,EAAYJ,EAAGC,GAAKE,EAAK,GAAGF,GAGvC,SAASG,EAAYJ,EAAGC,GACpB,OAAS,GAALA,EAAe,EACXD,EAAIC,EAAKG,EAAYJ,EAAI,EAAGC,EAAI,GCpG5CI,SAASC,iBAAiB,oBAAoB,KAC1C,MAAMC,EAAUF,SAASG,iBAAiB,2BACtCC,EAAYJ,SAASG,iBAAiB,+BACtC1B,EAAMuB,SAASK,cAAc,QAC7B7B,EAAQwB,SAASK,cAAc,UAC/BC,EAASN,SAASK,cAAc,WAE9BE,EAAS,IAQf,SAASC,IACL,ICOR,SAAmBC,GACf,IAAIC,GAAO,EAIX,OAHAD,EAAOrC,SAASuC,IACPA,EAAKpC,MAAMqC,MAAM,yBAAwBF,GAAO,MAElDA,EDZEG,CAAU,IAAIX,EAAS1B,IAExB,YADAgB,QAAQC,IAAI,+BAIhB,MAAMqB,EAAU,EAAa,IAAIZ,EAAS1B,EAAOC,IAE3CsC,EAAW,GAEjBX,EAAUhC,SAAS4C,IACf,GAAIA,EAAIC,QACJ,OAAQD,EAAI1C,aAAa,OACrB,IAAK,IACDyC,EAASG,KD7BjC,UAA2B,EAAEzD,EAAC,EAAEC,EAAC,MAAEI,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,GAAEE,GAAMoC,GACjE,MAAMY,EAAS,GACTC,GAAS1D,EAAID,GAAK8C,EAExB,IAAK,IAAI1B,EAAIpB,EAAGoB,GAAKnB,EAAGmB,GAAKuC,EAAO,CAChC,IAAIC,EAAIzC,EAAW,IAAKU,UAAU,GAAIT,MACtCsC,EAAOD,KAAK,CAACrC,EAAGwC,IAEpB,OAAOF,ECqB2B,CAAgCL,EAASP,IACvD,MACJ,IAAK,IACDQ,EAASG,KDMjC,UAAsB,EAAEzD,EAAC,EAAEC,EAAC,EAAEE,EAAC,IAAEC,EAAG,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,GAAEE,GAAMoC,GACpE,MAAMY,EAAS,GACTC,GAAS1D,EAAID,GAAK8C,EAClBrB,GAAaxB,EAAID,GAAKI,EAEtBiC,EAAOb,EAA4B,CAAEC,eAAcI,UAAU,KAEnE,IAAK,IAAIT,EAAIpB,EAAGoB,GAAKnB,EAAGmB,GAAKuC,EACzBD,EAAOD,KAAK,CAACrC,EAAGa,GAAab,EAAIpB,GAAKyB,EAAW,EAAGrB,EAAKiC,KAG7D,OAAOqB,ECjB2B,CAA2BL,EAASP,IAClD,MACJ,IAAK,IACDQ,EAASG,KDiBjC,UAAqB,EAAEzD,EAAC,EAAEC,EAAC,MAAEI,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,GAAEE,EAAE,IAAEN,GAAO0C,GAChE,MAAMY,EAAS,GACTC,GAAS1D,EAAID,GAAK8C,EAClBrB,GAAaxB,EAAID,GAAKI,EAEtBiC,EAAOb,EAA4B,CAAEC,eAAcI,UAAU,KAEnE,IAAK,IAAIT,EAAIpB,EAAGoB,GAAKnB,EAAGmB,GAAKuC,EAAO,CAChC,IAAIC,EAAIzC,EAAW,IAAKU,UAAU,GAAIT,MACtCsC,EAAOD,KAAK,CAACrC,EAAGwC,EAAI3B,GAAab,EAAIpB,GAAKyB,EAAW,EAAGrB,EAAKiC,KAEjE,OAAOqB,EC5B2B,CAA0BL,EAASP,IACjD,MACJ,IAAK,KACDQ,EAASG,KD3BjC,UAA8B,EAAEzD,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,MAAEE,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,IAAEJ,EAAG,OAAEK,GAAUqC,GACnF,MAAMY,EAAS,GACTC,GAAS1D,EAAID,GAAK8C,EAExB,IAAK,IAAI1B,EAAIpB,EAAGoB,GAAKnB,EAAGmB,GAAKuC,EAAO,CAChC,IAAIC,EAAIzC,EAAW,IAAKU,UAAU,GAAIT,MAClCyC,EAAK1C,EAAW,IAAKU,UAAU,GAAIT,EAAGA,EAAIX,IAC9CiD,EAAOD,KAAK,CAACrC,GAAIyC,EAAKD,GAAKnD,IAE/B,OAAOiD,ECkB2B,CAAmCL,EAASP,IAC1D,MACJ,IAAK,KACDQ,EAASG,KDlBjC,UAAyB,EAAEzD,EAAC,EAAEC,EAAC,EAAEC,EAAC,EAAEC,EAAC,MAAEE,EAAK,MAAEC,EAAK,MAAEC,EAAK,MAAEC,EAAK,IAAEJ,EAAG,OAAEK,GAAUqC,GAC9E,MAAMY,EAAS,GACTC,GAAS1D,EAAID,GAAK8C,EAClBrB,GAAaxB,EAAID,GAAKI,EAEtBiC,EAAOb,EAA4B,CAAEC,eAAcI,UAAU,KAEnE,IAAK,IAAIT,EAAIpB,EAAGoB,GAAKnB,EAAGmB,GAAKuC,EAAO,CAChC,IAAIC,EAAI3B,GAAab,EAAIpB,GAAKyB,EAAW,EAAGrB,EAAKiC,GAC7CyB,EAAK7B,GAAab,EAAIpB,EAAIS,GAAUgB,EAAW,EAAGrB,EAAKiC,GAC3DqB,EAAOD,KAAK,CAACrC,GAAI0C,EAAKF,GAAKnD,IAE/B,OAAOiD,ECM2B,CAA8BL,EAASP,SAI7DQ,EAASG,KAAK,OEnD9B,SAAeM,EAAmBC,EAAYX,GAC1C,MAAMY,EAAY1B,SAASK,cAAcmB,GAE3BG,MAAMC,KAAKF,EAAWD,EAAY,CAC5CI,MAAO,CACHC,IAAKhB,EAAQlD,EACbmE,IAAKjB,EAAQnD,GAEjBqE,MAAO,CACHF,IAAKhB,EAAQpD,EACbqE,IAAKjB,EAAQrD,GAEjBwE,KAAM,CACFC,oBAAoB,KFyCxB,CAAM,aAAcnB,EAAUD,GAvCV,IAAIV,EAAW5B,EAAOC,KAAQyB,GGd3C9B,SAASuC,IAChB,IAAIpC,EAAQ4D,aAAaC,QAAQzB,EAAKrC,aAAa,OAC/CC,IACkC,aAA9BoC,EAAKrC,aAAa,QAClBqC,EAAKM,QAAmB,QAAT1C,GACsB,SAA9BoC,EAAKrC,aAAa,SAEU,QAA5BqC,EAAKrC,aAAa,SADzBqC,EAAKpC,MAAQA,OHSF,IAAI6B,EAAW5B,EAAOC,KAAQyB,GGA1C9B,SAASuC,IACkB,aAA9BA,EAAKrC,aAAa,QAClBqC,EAAKV,iBAAiB,UAAU,KAC5BkC,aAAaE,QAAQ1B,EAAKrC,aAAa,MAAOqC,EAAKM,YAElB,SAA9BN,EAAKrC,aAAa,QACzBqC,EAAKV,iBAAiB,UAAU,KAC5BkC,aAAaE,QAAQ1B,EAAKrC,aAAa,MAAOqC,EAAKpC,UAEpB,QAA5BoC,EAAKrC,aAAa,OACzBqC,EAAKV,iBAAiB,UAAU,KAC5BkC,aAAaE,QAAQ,MAAO1B,EAAKpC,aHV7CiC,ICjBJ,UAAqC,QAAEN,EAAO,MAAE1B,IAC5C,SAAS8D,EAAejE,GACpB,OAAIA,EAAOE,MAAMqC,MAAM,wBACnBvC,EAAOkE,MAAMC,YAAc,IACpB,IAEPnE,EAAOkE,MAAMC,YAAc,OACpB,GAIftC,EAAQ9B,SAASuC,IACbA,EAAKV,iBAAiB,SAAUwC,IAC5B,IAAIlE,EAAQkE,EAAEpE,OAAOE,MACjB+D,EAAeG,EAAEpE,UACjBoE,EAAEpE,OAAOE,MACLA,EAAQ,IAAM,IAAMA,GAAS,KAAO,IAAMA,SAK1DC,EAAMyB,iBAAiB,SAAS,KAC5B,IAAI1B,EAAQC,EAAMD,MACd+D,EAAe9D,KACfA,EAAMD,MAAQA,EAAQ,EAAI,EAAIA,EAAQ,IAAM,IAAMA,MDL1DmE,CAA4B,CAAExC,UAAS1B,UAsCvC8B,EAAOL,iBAAiB,QAASO,GACjCR,SAASC,iBAAiB,WAAY0C,IACf,UAAfA,EAAMC,MAAkBpC,OAEhCJ,EAAUhC,SAASuC,GAASA,EAAKV,iBAAiB,UAAU,IAAMO,Y","file":"main.js","sourcesContent":["function getInputData(items) {\r\n    let a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi;\r\n\r\n    items.forEach((target) => {\r\n        switch (target.getAttribute(\"id\")) {\r\n            case \"A\":\r\n                a = target.value;\r\n                break;\r\n            case \"B\":\r\n                b = target.value;\r\n                break;\r\n            case \"C\":\r\n                c = target.value;\r\n                break;\r\n            case \"D\":\r\n                d = target.value;\r\n                break;\r\n            case \"nodes\":\r\n                nod = target.value;\r\n                break;\r\n            case \"alpha\":\r\n                alpha = target.value;\r\n                break;\r\n            case \"betta\":\r\n                betta = target.value;\r\n                break;\r\n            case \"gamma\":\r\n                gamma = target.value;\r\n                break;\r\n            case \"delta\":\r\n                delta = target.value;\r\n                break;\r\n            case \"xi\":\r\n                xi = target.value;\r\n                break;\r\n            case \"nodes\":\r\n                nod = nodes.value;\r\n                break;\r\n            case \"del\":\r\n                delta1 = del.value;\r\n                break;\r\n        }\r\n    });\r\n\r\n    a = parseInt(a);\r\n    b = parseInt(b);\r\n    c = parseInt(c);\r\n    d = parseInt(d);\r\n    alpha = parseInt(alpha);\r\n    betta = parseInt(betta);\r\n    gamma = parseInt(gamma);\r\n    delta = parseInt(delta);\r\n    delta1 = parseFloat(delta1);\r\n    nod = parseInt(nod);\r\n    xi = parseInt(xi);\r\n\r\n    return { a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi };\r\n}\r\n\r\nexport default getInputData;\r\n","function myFunction({ alpha, betta, gamma, delta, xi, x }) {\r\n    return alpha * Math.sin(betta / (x - gamma) ** 2) + delta * Math.cos(xi * x);\r\n}\r\n// (alpha) * Math.sin(Math.tan((betta) * x)) +\r\n// (gamma) * Math.cos((delta) * x)\r\n\r\nfunction getFunctionPoints({ a, b, alpha, betta, gamma, delta, xi }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        points.push([x, y]);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction getDifFunctionPoints({ a, b, c, d, alpha, betta, gamma, delta, nod, delta1 }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        let df = myFunction({ ...arguments[0], x: x + delta1 });\r\n        points.push([x, (df - y) / delta1]);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction getDifPolPoints({ a, b, c, d, alpha, betta, gamma, delta, nod, delta1 }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = calcPolynom((x - a) / interStep, 0, nod, matr);\r\n        let dp = calcPolynom((x - a + delta1) / interStep, 0, nod, matr);\r\n        points.push([x, (dp - y) / delta1]);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction getPolPoints({ a, b, d, nod, alpha, betta, gamma, delta, xi }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        points.push([x, calcPolynom((x - a) / interStep, 0, nod, matr)]);\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\nfunction getRnPoints({ a, b, alpha, betta, gamma, delta, xi, nod }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        points.push([x, y + calcPolynom((x - a) / interStep, 0, nod, matr)]);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction createFiniteDifferenceTable({ interStep, nod, a, alpha, gamma, betta, delta, xi }) {\r\n    let arr = [];\r\n    for (let i = 0; i < nod + 1; i++) {\r\n        arr[i] = [];\r\n        for (let j = 0; j < nod + 1; j++) {\r\n            arr[i][j] = 0;\r\n        }\r\n    }\r\n\r\n    for (let x = a, i = 0; i <= nod; x += interStep, i++) {\r\n        arr[i][0] = myFunction({ ...arguments[0], x });\r\n        if (isNaN(arr[i][0])) {\r\n            //Вот и костыли подъехали \r\n            arr[i][0] = myFunction({ ...arguments[0], x: x + interStep / 2 });\r\n            console.log(\"NaN\");\r\n        }\r\n    }\r\n\r\n    for (let j = 1; j <= nod; j++) {\r\n        for (let i = 0; i <= nod - j; i++) {\r\n            arr[i][j] = arr[i + 1][j - 1] - arr[i][j - 1];\r\n        }\r\n    }\r\n    \r\n    return arr;\r\n}\r\n\r\nfunction calcPolynom(t, k, n, matr) {\r\n    if (k < n) return calcPolynom(t, k + 1, n, matr) + coefAtDelta(t, k) * matr[0][k];\r\n    return coefAtDelta(t, k) * matr[0][k];\r\n}\r\n\r\nfunction coefAtDelta(t, k) {\r\n    if (k == 0) return 1;\r\n    return (t / k) * coefAtDelta(t - 1, k - 1);\r\n}\r\n\r\nexport { getFunctionPoints, getPolPoints, getRnPoints, getDifFunctionPoints, getDifPolPoints };\r\n","import getInputData from \"./components/get-intput-data\";\r\nimport basic from \"./components/print-graphics\";\r\nimport { isChecked, setListenersForCheckingData } from \"./components/check-input-data\";\r\nimport { postDataToLocalStorage, getDataFromLocalStorage } from \"./components/local-storage\";\r\nimport * as cordFunctions from \"./components/get-graphics-cord\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const optSize = document.querySelectorAll(\".opt input[data-type-1]\"),\r\n        functions = document.querySelectorAll(\".opt input[type='checkbox']\"),\r\n        del = document.querySelector(\"#del\"),\r\n        nodes = document.querySelector(\"#nodes\"),\r\n        button = document.querySelector(\"#button\");\r\n\r\n    const offset = 10000;\r\n\r\n    getDataFromLocalStorage([...functions, nodes, del, ...optSize]);\r\n    postDataToLocalStorage([...functions, nodes, del, ...optSize]);\r\n    start();\r\n\r\n    setListenersForCheckingData({ optSize, nodes });\r\n\r\n    function start() {\r\n        if (!isChecked([...optSize, nodes])) {\r\n            console.log(\"Данные введены некорректно!\");\r\n            return;\r\n        }\r\n\r\n        const dataSet = getInputData([...optSize, nodes, del]);\r\n\r\n        const pointSet = [];\r\n\r\n        functions.forEach((fun) => {\r\n            if (fun.checked) {\r\n                switch (fun.getAttribute(\"id\")) {\r\n                    case \"f\":\r\n                        pointSet.push(cordFunctions.getFunctionPoints(dataSet, offset));\r\n                        break;\r\n                    case \"p\":\r\n                        pointSet.push(cordFunctions.getPolPoints(dataSet, offset));\r\n                        break;\r\n                    case \"r\":\r\n                        pointSet.push(cordFunctions.getRnPoints(dataSet, offset));\r\n                        break;\r\n                    case \"df\":\r\n                        pointSet.push(cordFunctions.getDifFunctionPoints(dataSet, offset));\r\n                        break;\r\n                    case \"dp\":\r\n                        pointSet.push(cordFunctions.getDifPolPoints(dataSet, offset));\r\n                        break;\r\n                }\r\n            } else {\r\n                pointSet.push([]);\r\n            }\r\n        });\r\n        basic(\"#container\", pointSet, dataSet);\r\n    }\r\n\r\n    button.addEventListener(\"click\", start);\r\n    document.addEventListener(\"keydown\", (event) => {\r\n        if (event.code === \"Enter\") start();\r\n    });\r\n    functions.forEach((item) => item.addEventListener(\"change\", () => start()));\r\n});\r\n","function setListenersForCheckingData({ optSize, nodes }) {\r\n    function setBorderColor(target) {\r\n        if (target.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) {\r\n            target.style.borderColor = \"\";\r\n            return true;\r\n        } else {\r\n            target.style.borderColor = \"red\";\r\n            return false;\r\n        }\r\n    }\r\n\r\n    optSize.forEach((item) => {\r\n        item.addEventListener(\"input\", (e) => {\r\n            let value = e.target.value;\r\n            if (setBorderColor(e.target)) {\r\n                e.target.value =\r\n                    value > 100 ? 100 : value < -100 ? -100 : value;\r\n            }\r\n        });\r\n    });\r\n\r\n    nodes.addEventListener(\"input\", () => {\r\n        let value = nodes.value;\r\n        if (setBorderColor(nodes)) {\r\n            nodes.value = value < 0 ? 0 : value > 200 ? 200 : value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction isChecked(inputs) {\r\n    let flag = true;\r\n    inputs.forEach((item) => {\r\n        if (!item.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) flag = false;\r\n    });\r\n    return flag;\r\n}\r\n\r\n// export default inputData;\r\nexport {isChecked, setListenersForCheckingData};","function basic(containerSelector, pointsData, dataSet) {\r\n    const container = document.querySelector(containerSelector);\r\n\r\n    const graph = Flotr.draw(container, pointsData, {\r\n        yaxis: {\r\n            max: dataSet.d,\r\n            min: dataSet.c,\r\n        },\r\n        xaxis: {\r\n            max: dataSet.b,\r\n            min: dataSet.a,\r\n        },\r\n        grid: {\r\n            minorVerticalLines: true,\r\n        },\r\n    });\r\n}\r\n\r\nexport default basic;\r\n","function getDataFromLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        let value = localStorage.getItem(item.getAttribute(\"id\"));\r\n        if (value) {\r\n            if (item.getAttribute(\"type\") === \"checkbox\") {\r\n                item.checked = value == \"true\";\r\n            } else if (item.getAttribute(\"type\") === \"text\") {\r\n                item.value = value;\r\n            } else if (item.getAttribute(\"id\") === \"del\") {\r\n                item.value = value;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction postDataToLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        if (item.getAttribute(\"type\") === \"checkbox\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.checked);\r\n            });\r\n        } else if (item.getAttribute(\"type\") === \"text\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.value);\r\n            });\r\n        } else if (item.getAttribute(\"id\") === \"del\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(\"del\", item.value);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport { getDataFromLocalStorage, postDataToLocalStorage };\r\n"],"sourceRoot":""}