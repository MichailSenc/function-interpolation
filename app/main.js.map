{"version":3,"sources":["webpack://porf-lab/./src/components/get-graphics-cord.js","webpack://porf-lab/./src/index.js","webpack://porf-lab/./src/components/check-input-data.js","webpack://porf-lab/./src/components/get-intput-data.js","webpack://porf-lab/./src/components/print-graphics.js","webpack://porf-lab/./src/components/local-storage.js"],"names":["myFunction","alpha","betta","gamma","delta","xi","x","Math","sin","cos","createFiniteDifferenceTable","interStep","nod","a","arr","i","j","arguments","document","addEventListener","optSize","querySelectorAll","functions","del","querySelector","nodes","button","start","flag","forEach","item","value","match","isChecked","console","log","dataSet","b","c","d","delta1","target","getAttribute","parseInt","pointSet","push","offset","points","stepX","y","getFunctionPoints","matr","pol","t","k","n","fac","getPolPoints","containerSelector","pointsData","container","Flotr","draw","yaxis","max","min","xaxis","grid","minorVerticalLines","localStorage","getItem","checked","setItem","setBorderColor","style","borderColor","e","setListenersForCheckingData","event","code"],"mappings":"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","file":"main.js","sourcesContent":["function myFunction({ alpha, betta, gamma, delta, xi, x }) {\r\n    return (\r\n        alpha * Math.sin(betta / ((x - gamma) ** 2)) + delta * Math.cos(xi * x)\r\n    );\r\n}\r\n// Number(alpha) * Math.sin(Math.tan(Number(betta) * x)) +\r\n// Number(gamma) * Math.cos(Number(delta) * x)\r\n\r\nfunction getFunctionPoints({ a, b, alpha, betta, gamma, delta, xi }, offset) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    // console.log(`y = ${alpha} * sin(${betta}/(x - ${gamma})^2) + ${delta} * cos${xi}x`);\r\n    // console.log(arguments[0]);\r\n    // console.log(Math.sin(1));\r\n    // console.log(Math.cos(1));\r\n    for (let x = a; x <= b; x += stepX) {\r\n        let y = myFunction({ ...arguments[0], x });\r\n        points.push([x, y]);\r\n        // console.log(`x: ${x}, y: ${y}`);\r\n    }\r\n    return points;\r\n}\r\n\r\nfunction createFiniteDifferenceTable({\r\n    interStep,\r\n    nod,\r\n    a,\r\n    alpha,\r\n    gamma,\r\n    betta,\r\n    delta,\r\n    xi,\r\n}) {\r\n    let arr = [];\r\n    for (let i = 0; i < nod + 1; i++) {\r\n        arr[i] = [];\r\n        for (let j = 0; j < nod + 1; j++) {\r\n            arr[i][j] = 0;\r\n        }\r\n    }\r\n\r\n    for (var x = a, i = 0; i <= nod; x += interStep, i++) {\r\n        arr[i][0] = myFunction({ ...arguments[0], x });\r\n    }\r\n\r\n    for (var j = 1; j <= nod; j++) {\r\n        for (var i = 0; i <= nod - j; i++) {\r\n            arr[i][j] = arr[i + 1][j - 1] - arr[i][j - 1];\r\n        }\r\n    }\r\n\r\n    return arr;\r\n}\r\n\r\nfunction getPolPoints(\r\n    { a, b, d, nod, alpha, betta, gamma, delta, xi },\r\n    offset\r\n) {\r\n    const points = [];\r\n    const stepX = (b - a) / offset;\r\n    const interStep = (b - a) / nod;\r\n\r\n    const matr = createFiniteDifferenceTable({ interStep, ...arguments[0] });\r\n\r\n    for (var x = a; x <= b; x += stepX) {\r\n        points.push([x, pol((x - a) / interStep, 0, nod)]);\r\n    }\r\n\r\n    //полином\r\n    function pol(t, k, n) {\r\n        if (k < n) return pol(t, k + 1, n) + fac(t, k) * matr[0][k];\r\n        return fac(t, k) * matr[0][k];\r\n    }\r\n\r\n    //коэффициент при дельта^k(y0)\r\n    function fac(t, k) {\r\n        if (k == 0) return 1;\r\n        return (t / k) * fac(t - 1, k - 1);\r\n    }\r\n\r\n    return points;\r\n}\r\n\r\nexport { getFunctionPoints, getPolPoints };\r\n","import getInputData from \"./components/get-intput-data\";\r\nimport basic from \"./components/print-graphics\";\r\n\r\nimport { postDataToLocalStorage, getDataFromLocalStorage } from \"./components/local-storage\";\r\n\r\nimport {\r\n    getFunctionPoints,\r\n    getPolPoints,\r\n} from \"./components/get-graphics-cord\";\r\n\r\nimport {\r\n    isChecked,\r\n    setListenersForCheckingData,\r\n} from \"./components/check-input-data\";\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", () => {\r\n    const optSize = document.querySelectorAll(\".opt input[data-type-1]\"),\r\n        functions = document.querySelectorAll(\".opt input[type='checkbox']\"),\r\n        del = document.querySelector(\"#del\"),\r\n        nodes = document.querySelector(\"#nodes\"),\r\n        button = document.querySelector(\"#button\");\r\n\r\n    const offset = 10000;\r\n\r\n    getDataFromLocalStorage([...functions, nodes, del, ...optSize]);\r\n    postDataToLocalStorage([...functions, nodes, del, ...optSize]);\r\n\r\n    setListenersForCheckingData({ optSize, nodes });\r\n\r\n    function start() {\r\n        if (!isChecked({ optSize, nodes })) {\r\n            console.log(\"Данные введены некорректно!\");\r\n            return;\r\n        }\r\n\r\n        const dataSet = getInputData({ optSize, nodes, del });\r\n\r\n        const pointSet = [];\r\n        \r\n        pointSet.push(getFunctionPoints(dataSet, offset));\r\n        pointSet.push(getPolPoints(dataSet, offset));\r\n\r\n\r\n\r\n        basic(\"#container\", pointSet, dataSet);\r\n\r\n        // //TODO: для каждой отмеченной функции построить график\r\n        // functions.forEach((fun) => {\r\n        //     if (fun.checked) {\r\n        //         // нарисовать граффик\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    button.addEventListener(\"click\", start);\r\n    document.addEventListener(\"keydown\", (event) => {\r\n        if (event.code === \"Enter\") start();\r\n    });\r\n});\r\n","function setListenersForCheckingData({ optSize, nodes }) {\r\n    function setBorderColor(target) {\r\n        if (target.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) {\r\n            target.style.borderColor = \"\";\r\n            return true;\r\n        } else {\r\n            target.style.borderColor = \"red\";\r\n            return false;\r\n        }\r\n    }\r\n\r\n    optSize.forEach((item) => {\r\n        item.addEventListener(\"input\", (e) => {\r\n            let value = e.target.value;\r\n            if (setBorderColor(e.target)) {\r\n                e.target.value =\r\n                    value > 100 ? 100 : value < -100 ? -100 : value;\r\n            }\r\n        });\r\n    });\r\n\r\n    nodes.addEventListener(\"input\", () => {\r\n        let value = nodes.value;\r\n        if (setBorderColor(nodes)) {\r\n            nodes.value = value < 0 ? 0 : value > 200 ? 200 : value;\r\n        }\r\n    });\r\n}\r\n\r\nfunction isChecked({ optSize, nodes }) {\r\n    let flag = true;\r\n    optSize.forEach((item) => {\r\n        if (!item.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) flag = false;\r\n    });\r\n\r\n    if (!nodes.value.match(/^\\s*[-+]?[0-9]+\\s*$/)) flag = false;\r\n    return flag;\r\n}\r\n\r\n// export default inputData;\r\nexport {isChecked, setListenersForCheckingData};","function getInputData({ optSize, nodes, del }) {\r\n    let a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi;\r\n\r\n    nod = nodes.value;\r\n    delta1 = del.value;\r\n\r\n    optSize.forEach((target) => {\r\n        switch (target.getAttribute(\"id\")) {\r\n            case \"A\":\r\n                a = target.value;\r\n                break;\r\n            case \"B\":\r\n                b = target.value;\r\n                break;\r\n            case \"C\":\r\n                c = target.value;\r\n                break;\r\n            case \"D\":\r\n                d = target.value;\r\n                break;\r\n            case \"nodes\":\r\n                nod = target.value;\r\n                break;\r\n            case \"alpha\":\r\n                alpha = target.value;\r\n                break;\r\n            case \"betta\":\r\n                betta = target.value;\r\n                break;\r\n            case \"gamma\":\r\n                gamma = target.value;\r\n                break;\r\n            case \"delta\":\r\n                delta = target.value;\r\n                break;\r\n            case \"xi\":\r\n                xi = target.value;\r\n                break;\r\n        }\r\n    });\r\n\r\n    a = parseInt(a);\r\n    b = parseInt(b);\r\n    c = parseInt(c);\r\n    d = parseInt(d);\r\n    nod = parseInt(nod);\r\n    alpha = parseInt(alpha);\r\n    betta = parseInt(betta);\r\n    gamma = parseInt(gamma);\r\n    delta = parseInt(delta);\r\n    delta1 = parseInt(delta1);\r\n    xi = parseInt(xi);\r\n\r\n    return { a, b, c, d, nod, alpha, betta, gamma, delta, delta1, xi };\r\n}\r\n\r\nexport default getInputData;\r\n","function basic(containerSelector, pointsData, dataSet) {\r\n    const container = document.querySelector(containerSelector);\r\n\r\n    const graph = Flotr.draw(container, pointsData, {\r\n        yaxis: {\r\n            max: dataSet.d,\r\n            min: dataSet.c,\r\n        },\r\n        xaxis: {\r\n            max: dataSet.b,\r\n            min: dataSet.a,\r\n        },\r\n        grid: {\r\n            minorVerticalLines: true,\r\n        },\r\n    });\r\n}\r\n\r\nexport default basic;\r\n","function getDataFromLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        let value = localStorage.getItem(item.getAttribute(\"id\"));\r\n        if (value) {\r\n            if (item.getAttribute(\"type\") === \"checkbox\") {\r\n                item.checked = value == \"true\";\r\n            } else if (item.getAttribute(\"type\") === \"text\") {\r\n                item.value = value;\r\n            } else if (item.getAttribute(\"id\") === \"del\") {\r\n                item.value = value;\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nfunction postDataToLocalStorage(attributes) {\r\n    attributes.forEach((item) => {\r\n        if (item.getAttribute(\"type\") === \"checkbox\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.checked);\r\n            });\r\n        } else if (item.getAttribute(\"type\") === \"text\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(item.getAttribute(\"id\"), item.value);\r\n            });\r\n        } else if (item.getAttribute(\"id\") === \"del\") {\r\n            item.addEventListener(\"change\", () => {\r\n                localStorage.setItem(\"del\", item.value);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\nexport { getDataFromLocalStorage, postDataToLocalStorage };\r\n"],"sourceRoot":""}